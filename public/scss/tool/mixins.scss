@mixin borderRadius ( $r: $borderRadiusDefault ) {
	-webkit-border-radius: $r;
	-moz-border-radius: $r;
	-ms-border-radius: $r;
	-o-border-radius: $r;
	border-radius: $r;
}

@mixin boxShadow ( $string: 0 0 1px fade-out($black, 0.8) ) {
	-webkit-box-shadow: $string;
	-moz-box-shadow: $string;
	-ms-box-shadow: $string;
	-o-box-shadow: $string;
	box-shadow: $string;
}

@mixin outLine ( $string ) {
	-webkit-outline: $string;
	-moz-outline: $string;
	-ms-outline: $string;
	-o-outline: $string;
	outline: $string;
}

@mixin boxSizing ( $string: border-box ) {
	-webkit-box-sizing: $string;
	-moz-box-sizing: $string;
	-ms-box-sizing: $string;
	-o-box-sizing: $string;
	box-sizing: $string;
}

@mixin transition ( $string ) {
	-webkit-transition: $string;
	-moz-transition: $string;
	-ms-transition: $string;
	-o-transition: $string;
	transition: $string;
}

@mixin imgBg ($img: "http://lorempixel.com/300/300", $p: center center) {
	background-image: url( $img );
	background-repeat: no-repeat;
	background-position: $p;
	-webkit-background-size: cover;
	-moz-background-size: cover;
	-ms-background-size: cover;
	-o-background-size: cover;
	background-size: cover;
}

@mixin vScroll () {
	overflow: auto;
	overflow-x: hidden;
	-webkit-overflow-scrolling: touch;
}

@mixin transformOrigin ( $string ) {
	-webkit-transform-origin: $string;
	-moz-transform-origin: $string;
	-ms-transform-origin: $string;
	-o-transform-origin: $string;
	transform-origin: $string;
}

@mixin transformRotate ($deg: 0deg, $plus: "") {
	-webkit-transform: rotate( $deg ) $plus;
	-moz-transform: rotate( $deg ) $plus;
	-ms-transform: rotate( $deg ) $plus;
	-o-transform: rotate( $deg ) $plus;
	transform: rotate( $deg ) $plus;
}

@mixin transformScale ( $ratio: 1 ) {
	-webkit-transform: scale( $ratio );
	-moz-transform: scale( $ratio );
	-ms-transform: scale( $ratio );
	-o-transform: scale( $ratio );
	transform: scale( $ratio );
}

@mixin transformTranslate3d ( $x: 0, $y: 0, $z: 0 ) {
	-webkit-transform: translate3d( $x, $y, $z );
	-moz-transform: translate3d( $x, $y, $z );
	-ms-transform: translate3d( $x, $y, $z );
	-o-transform: translate3d( $x, $y, $z );
	transform: translate3d( $x, $y, $z );
}

@mixin blur ( $blur: 1px ) {
	-webkit-filter: blur( $blur );
	-moz-filter: blur( $blur );
	-ms-filter: blur( $blur );
	-o-filter: blur( $blur );
	filter: blur( $blur );
}

@mixin respond-to ( $breakpoint ) {
    @if map-has-key($breakpoints, $breakpoint) {
        @media (min-width: #{map-get($breakpoints, $breakpoint)}) {
            @content;
        }
    }

    @else{
        @warn "Unfortunately, no value could be retrieved from `#{$breakpoint}`. Please make sure it is defined in `$breakpoints` map.";
    }
}